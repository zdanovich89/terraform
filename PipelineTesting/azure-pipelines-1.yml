trigger: none
stages:
    - stage: validate
      jobs:
      - job: Compliance
        displayName: 'Run Terrascan to check for compliance'
        pool: 
          vmImage: 'ubuntu-latest'
      
        steps:
        - script: |
            curl --location https://github.com/accurics/terrascan/releases/download/v1.3.1/terrascan_1.3.1_Linux_x86_64.tar.gz --output terrascan.tar.gz
            tar -xvf terrascan.tar.gz
            sudo install terrascan /usr/local/bin    
          displayName: 'Get tools'

        - script: |
            echo '$(System.DefaultWorkingDirectory)'
            terrascan scan -t azure -i terraform
          workingDirectory: '$(System.DefaultWorkingDirectory)/PipelineTesting'
          displayName: 'Run terrascan'             
    - stage: AzureCLI
      displayName: 'Azure CLI'
      jobs:
      - job: AzureCLIScript
        displayName: 'Azure CLI Script'
        pool:
          vmImage: 'ubuntu-latest'
          steps:
          - checkout: self
            clean: true     

          - task: AzureCLI@2
            inputs:
              azureSubscription: 'Azure subscription 1 (98134baf-b89e-45c5-9c70-1c40e593e6db)'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp.gpg
                        echo "deb [arch=amd64 signed-by=/usr/share/keyrings/hashicorp.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
                        sudo apt-get update && sudo apt-get install terraform
                # Initialize Terraform
                echo "Initializing Terraform..."
                terraform init
                
                # Apply Terraform configuration
                echo "Applying Terraform configuration..."
                terraform apply -auto-approve