trigger: none
stages:
    - stage: validate_Terrascan
      jobs:
      - job: Compliance
        displayName: 'Run Terrascan to check for compliance'
        pool: 
          vmImage: 'ubuntu-latest'
      
        steps:
        - script: |
            curl --location https://github.com/accurics/terrascan/releases/download/v1.3.1/terrascan_1.3.1_Linux_x86_64.tar.gz --output terrascan.tar.gz
            tar -xvf terrascan.tar.gz
            sudo install terrascan /usr/local/bin    
          displayName: 'Get tools'

        - script: |
            terrascan scan
          workingDirectory: '$(System.DefaultWorkingDirectory)/PipelineTesting'
          displayName: 'Run terrascan'
          continueOnError: true

    - stage: validate_tfsec
      # dependsOn: validate_Terrascan
      # condition: always()
      jobs:
      - job: Compliance
        displayName: 'Run tfsec to check for compliance'
        pool: 
          vmImage: 'ubuntu-latest'   
      
        steps:
        - script: |
            curl -L -o tfsec https://github.com/tfsec/tfsec/releases/latest/download/tfsec-linux-amd64
            chmod +x tfsec
            sudo mv tfsec /usr/local/bin/

        - script: |
            tfsec
          workingDirectory: '$(System.DefaultWorkingDirectory)/PipelineTesting'
          displayName: 'Run tfsec'
          continueOnError: true

    - stage: validate_chechov
      jobs:
      - job: Compliance
        displayName: 'Run chechov to check for compliance'
        pool: 
          vmImage: 'ubuntu-latest'
      
        steps:
        - script: |
            sudo apt update
            sudo apt install software-properties-common
            sudo add-apt-repository ppa:deadsnakes/ppa
            sudo apt-get install python3-distutils
            sudo apt install python3.7
            sudo apt install python3-pip
            sudo python3.7 -m pip install -U checkov
        - script:
            chechov -d .
          workingDirectory: '$(System.DefaultWorkingDirectory)/PipelineTesting'
